#!/usr/bin/env python
import sys
import re
output = "; gcode output hyperlapse trigger v1.2 via https://cat5.tv/3dprinting\n"
try:
  lr = sys.argv[2].strip()
  left = ['l','left']
  right = ['r','right']
  if lr.lower() in left:
    lr = "l"
  if lr.lower() in right:
    lr = "r"
  print lr
except IndexError:
  lr = "l"
  pass
try:
  with open(sys.argv[1],'r') as gcode:
    for line in gcode:
      line = line.strip()
      if ';TRIGGER' in line:
        sys.exit(sys.argv[1] + " already has trigger code.")
      coord = re.findall(r'[XY].?\d+.\d+',line)
      if coord:
        x = coord[0]
        try:
           y = coord[1]
        except IndexError:
           y = ""
           pass
        lastcoord = x + " " + y
      if ';LAYER:' in line:
        output += ";TRIGGER\n"
        output += "G91; Relative movement for retraction\n"
        # Note the retraction distance is set for bowden feed. For direct, use 1-2mm.
        output += "G1 E-6 F2400; Retract filament\n"
        output += "G90; Absolute\n"
        if lr == "l":
          output += "G1 F9000 X12 Y215; Quick move to switch on left\n"
          output += "G1 F1000 X0; Tap the button\n"
        if lr == "r":
          output += "G1 F9000 X190 Y210; Quick move to switch on right\n"
          output += "G1 F1000 X197; Tap the button\n"
        output += "G4 P500; Smile!\n"
        if lr == "l":
          output += "G1 F9000 X12; Back up\n"
        if lr == "r":
          output += "G1 F9000 X190; Back up\n"
        try:
          output += "G0 " + lastcoord + " F9000; Return to print\n"
        except NameError:
          pass
        output += "G91; Relative movement to return filament\n"
        output += "G1 E7 F2400; Return filament\n"
        output += "G90; Back to absolute"
      output += line + "\n"

    print output
except IndexError:
  sys.exit("Usage: " + sys.argv[0] + " myfile.gcode [l|r]\n       Where myfile.gcode is the input file. l[eft] or r[ight] are the location of your switch. l is default.\n\nNote: Can pipe the output to a new file.")
except IOError:
  sys.exit(sys.argv[1] + " not found.")
